name: Check Assignees Approval

on:
  pull_request:
    types: [opened, assigned, review_requested, review_request_removed]
  pull_request_review:
    types: [submitted]

jobs:
  check_assignees_approval:
    name: check-assignees-approval
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    steps:
      - name: All assignees approve?
        uses: actions/github-script@v7
        with:
          script: |
            // Hard code the maintainers list for now
            // TODO: see if we can pull this from the maintainers file
            const maintainers = [
              "vkakerbeck",
              "nielsleadholm",
              "tristanls",
              "codeallthethingz",
              "scottcanoe",
              "hlee9212",
              "ramyamounir",
            ];
            
            const pr = context.payload.pull_request;
            const { owner, repo } = context.repo;
            
            console.log(`Checking approvals for PR #${pr.number}`);
            
            // 1. Check for no maintainers in assignees
            const assignees = pr.assignees.map(a => a.login);
            if (assignees.length === 0) {
              core.setFailed("No assignees listed.");
              return;
            }
            
            // 2. Check for non maintainers in assignees
            const nonMaintainers = assignees.filter(assignee =>
              !maintainers.includes(assignee)
            );
            if (nonMaintainers.length !== 0) {
              core.setFailed(`Non-maintainers in assignee list: ${nonMaintainers.join(", ")}`);
              return;
            }
            
            // 3. Check for pending assignee reviews
            const requestedReviewers = pr.requested_reviewers
              .map(r => r.login)
              .filter(r => assignees.includes(r))
            
            if (requestedReviewers.length > 0) {
              core.setFailed(`The following assignees have not submitted a review: ${requestedReviewers.join(", ")}\n` +
                             "Note: re-review requests are included in this.");
              return;
            }
            
            // 4. Check latest review states
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: pr.number,
            });
            const latestReviews = reviews
              .filter(r => maintainers.includes(r.user.login))
              .reduce((result, review) => {
                result[review.user.login] = review.state;
                return result;
              }, {});
            
            console.log("Latest assignee review states: ", latestReviews);
            
            const notApproved = assignees.filter(assignee =>
              latestReviews[assignee] !== 'APPROVED'
            );
            if (notApproved.length > 0) {
              core.setFailed(`The following assignees have not approved: ${notApproved.join(", ")}\n` +
                             "Note: the latest review for each assignee must be an approval.");
              return;
            } 
            
            console.log(`All assignees have approved: ${assignees.join(", ")}`);
