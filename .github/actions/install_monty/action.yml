name: "Install Monty"
description: "Installs the Monty framework."

inputs:
  working_directory:
    description: "The directory to run the command in."
    required: true

outputs:
  conda_env_cache_key_sha:
    description: "The cache key for the conda environment."
    value: ${{ steps.generate_cache_key.outputs.conda_env_cache_key_sha }}

runs:
  using: "composite"
  steps:
    - name: Generate cache key
      id: generate_cache_key
      shell: bash
      run: |
        mkdir -p ~/tbp
        ln -s $GITHUB_WORKSPACE/tbp.monty ~/tbp/tbp.monty
        shasum -a 256 ~/tbp/tbp.monty/environment_arm64.yml | awk '{print $1}' > ~/tbp/environment_arm64.sha
        shasum -a 256 ~/tbp/tbp.monty/environment.yml | awk '{print $1}' > ~/tbp/environment.sha
        shasum -a 256 ~/tbp/tbp.monty/pyproject.toml | awk '{print $1}' > ~/tbp/pyproject.toml.sha
        echo "monty-${RUNNER_OS}-$(cat ~/tbp/environment_arm64.sha)-$(cat ~/tbp/environment.sha)-$(cat ~/tbp/pyproject.toml.sha)" > ~/tbp/conda_env_cache_key.txt
        echo "conda_env_cache_key_sha=$(cat ~/tbp/conda_env_cache_key.txt | shasum -a 256 | awk '{print $1}')" >> $GITHUB_OUTPUT
    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Restore cache
      id: restore_cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/miniconda
        key: ${{ steps.generate_cache_key.outputs.conda_env_cache_key_sha }}
        lookup-only: true
    - name: Install miniconda
      if: ${{ steps.restore_cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        if [ ! -d ~/miniconda ]
        then
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
          bash ~/miniconda.sh -b -p ~/miniconda
          rm ~/miniconda.sh
        fi
    - name: Create conda environment
      if: ${{ steps.restore_cache.outputs.cache-hit != 'true' }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        (conda env list | grep tbp.monty) && conda remove --name tbp.monty --all --yes || true
        conda env create
        source activate tbp.monty
        pip install -e .[dev]
        pip list
        conda list
    - name: Save cache
      if: ${{ steps.restore_cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v4
      with:
        path: |
          ~/miniconda
        key: ${{ steps.restore_cache.outputs.cache-primary-key }}
