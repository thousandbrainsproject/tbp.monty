name: "Pin Comment"
description: "Pins a comment by hiding it with HTML comments and a unique ID"

inputs:
  message:
    description: "The message to pin"
    required: true
  token:
    description: "GitHub token"
    required: true
  issue_number:
    description: "The issue or PR number"
    required: true
  comment_id:
    description: "Unique identifier for this pinned comment"
    required: true
  working_directory:
    description: "Path to the repository working directory"
    required: true

runs:
  using: "composite"
  steps:
    - name: Pin comment
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        MESSAGE: ${{ inputs.message }}
        ISSUE_NUMBER: ${{ inputs.issue_number }}
        COMMENT_ID: ${{ inputs.comment_id }}
        WORKING_DIRECTORY: ${{ inputs.working_directory }}
      run: |
        # Change to working directory
        cd "${WORKING_DIRECTORY}"
        
        # Create comment with hidden marker and ID
        COMMENT="<!--pin-comment-marker-${COMMENT_ID}-->
        ${MESSAGE}"
        
        # Find and delete old comment with same ID
        # Get all comments and find the one with our marker
        comments=$(gh api "/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/comments")
        old_comment_id=$(echo "$comments" | jq -r ".[] | select(.body | startswith(\"<!--pin-comment-marker-${COMMENT_ID}-->\")) | .id")
        
        # Delete old comment if found
        if [ ! -z "$old_comment_id" ]; then
          gh api -X DELETE "/repos/${GITHUB_REPOSITORY}/issues/comments/${old_comment_id}"
        fi

        # Create new pinned comment
        gh issue comment "${ISSUE_NUMBER}" --body "${COMMENT}"
